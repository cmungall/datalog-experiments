/** OWL Datamodel

This module is declarations only

The intent is either that declarations are supplied directly OR inferred from RDF (see owl_from_rdf.dl)

STATUS: PARTIAL - only a subset of EL is supported

*/

.type Node <: symbol
.type Literal <: symbol
.type NodeOrLiteral = Node | Literal

.type AnonymousEntity <: Node
.type NamedEntity <: Node
.type Entity = AnonymousEntity | NamedEntity

.type NamedClass <: NamedEntity
.type AnonymousClassExpression <: AnonymousEntity
.type ClassExpression = NamedClass | AnonymousClassExpression

.type NamedIndividual <: NamedEntity
.type AnonymousIndividual <: AnonymousEntity
.type Individual = NamedIndividual | AnonymousIndividual

.type NamedObjectProperty <: NamedEntity
.type AnonymousObjectPropertyExpression <: AnonymousEntity
.type ObjectPropertyExpression = NamedObjectProperty | AnonymousObjectPropertyExpression


.decl chain(p:ObjectPropertyExpression, p1:ObjectPropertyExpression, p2:ObjectPropertyExpression)
.decl intersectionOf1(c:ClassExpression, x1:ClassExpression)
.decl intersectionOf2(c:ClassExpression, x1:ClassExpression, x2:ClassExpression)
.decl intersectionOf3(c:ClassExpression, x1:ClassExpression, x2:ClassExpression, x3:ClassExpression)
.decl intersectionOf_member(c:ClassExpression, x:ClassExpression)
.decl transitive(p:NamedObjectProperty)
.decl subClassOf(s:ClassExpression, o:ClassExpression)
.decl equivalentClass(s:ClassExpression, o:ClassExpression)
.decl subPropertyOf(s:ObjectPropertyExpression, o:ObjectPropertyExpression)
.decl owl_class(s: NamedClass)
.decl owl_object_property(s: NamedObjectProperty)
.decl owl_named_individual(s: NamedIndividual)
.decl owl_named_entity(s: NamedEntity)
.decl someValuesFrom(restr:AnonymousClassExpression, p:ObjectPropertyExpression, v:ClassExpression)